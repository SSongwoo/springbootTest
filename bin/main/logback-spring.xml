<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>
<configuration debug="true">
	<!-- Appenders : 로그를 어디에 출력할지 (콘솔, 파일 기록, DB 저장 등) 결정 -->
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<!-- encoder : appender에 포함되어 출력할 로그를 지정한 형식으로 변환 -->
		<!-- DEBUG용 -->
		<encoder>
			<Pattern>%d %5p [%c] %m%n</Pattern>
		</encoder>
	</appender>

	<appender name="console-infolog" class="ch.qos.logback.core.ConsoleAppender">
		<!-- INFO 레벨용 -->
		<encoder>
			<Pattern>%d %5p %m%n</Pattern>
		</encoder>   
	</appender>

	<!-- 로거 -->
	<!-- logger : 로그를 출력하는 요소 : level 속성을 통해서 출력할 로그의 레벨을 조절하여 appender에 전달 -->
	<logger name="com.board" level="DEBUG" appender-ref="console"/> <!-- DEBUG레벨 로그를 출력하는 형식은 console이라는 이름의 appender를 사용 -->
	<logger name="org.springframework" level="error"/>
	<logger name="org.springframework.jdbc" level="error"/>
	<logger name="jdbc.sqlonly" level="INFO" appender-ref="console-infolog"/> 
	<logger name="jdbc.resultsettable" level="INFO" appender-ref="console-infolog"/>
	
	<!-- jdbc.sqlonly : SQL들을 보여주며 P-Statement 경우 관련된 파라매터는 자동으로 변경되어 출력됩니다.
	jdbc.sqltiming : SQL문과 해당 SQL문의 실행 시간을 밀리초 단위로 보여줍니다.
	jdbc.audit : ResultSets을 제외한 모든 JDBC 호출정보를 보여줍니다. (일반적으로 사용 안함)
	jdbc.resultset : ResultSets을 포함한 모든 JDBC 호출정보를 보여줍니다. (일반적으로 더 사용 안함)
	jdbc.resulttable : SQL의 조회 결과를 테이블로 보여줍니다.
	jdbc.connection : Connection의 연결과 종료에 관련된 로그를 보여줍니다. 메모리 누수에 도움됨!-->
	
	<!-- 
	append level
	trace : 모든 로그를 출력합니다.
	debug : 개발할 때 디버그 용도로 사용됩니다.
	info : 상태 변경 등과 같은 정보성 메세지를 나타냅니다.
	warn : 프로그램의 실행에는 문제 없지만 추후 시스템에러의 원인이 될 수 있다는 경고성 메세지를 의미합니다.
	error : 요청을 처리하던 도중 문제가 발생한 것을 의미합니다.
	 -->
	
	<!-- 루트 로거 -->
    <root level="error">
        <appender-ref ref="console"/>
    </root>
</configuration>